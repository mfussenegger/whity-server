[buildout]
develop = .
extends = versions.cfg
versions = versions
show-picked-versions = true
parts = scripts
        cvpy
        opencv

[scripts]
recipe = zc.recipe.egg:script
interpreter = py
eggs = wheel
       whity
       python-rtmidi
       requests

[downloads]
#opencv = http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4/OpenCV-2.4.10.tar.bz2/download
opencv = http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/2.4.10/opencv-2.4.10.zip?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fopencvlibrary%2Ffiles%2Fopencv-unix%2F2.4.10%2Fopencv-2.4.10.zip%2Fdownload&ts=1424451798&use_mirror=netcologne
cmake = http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz


[opencv]
recipe = hexagonit.recipe.cmmi
url = ${downloads:opencv}
configure-command = cmake                                               \
    -D CMAKE_BUILD_TYPE=RELEASE                                         \
    -D CMAKE_INSTALL_PREFIX=${buildout:directory}/parts/opencv/build    \
#   -D WITH_TBB=ON                                                      \
#   -D TBB_INCLUDE_DIR=${buildout:directory}/parts/tbb                  \
    -D BUILD_NEW_PYTHON_SUPPORT=ON                                      \
    -D PYTHON_EXECUTABLE=${buildout:directory}/bin/cvpy .

[cmake]
recipe = hexagonit.recipe.cmmi
url = ${downloads:cmake}

[cvpy]
environment = cvenv
recipe = zc.recipe.egg
eggs = ipython
       numpy
scripts = ipython=cvpy
#extra-paths = ${buildout:directory}/parts/opencv/build/lib
#initialization = import os;os.putenv('LD_LIBRARY_PATH','${buildout:directory}/parts/opencv/build/lib')
#rpath = ${buildout:directory}/parts/opencv/build/lib

[cvenv]
LD_LIBRARY_PATH=${buildout:directory}/parts/opencv/build/lib

